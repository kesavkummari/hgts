
ck@ck hgts-shared % terraform plan    

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.hgts_shared_eip will be created
  + resource "aws_eip" "hgts_shared_eip" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # aws_internet_gateway.hgts_shared_igw will be created
  + resource "aws_internet_gateway" "hgts_shared_igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Created_By" = "Terraform"
          + "Name"       = "hgts_shared_igw"
        }
      + tags_all = {
          + "Created_By" = "Terraform"
          + "Name"       = "hgts_shared_igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_key_pair.hgts_shared_keypair will be created
  + resource "aws_key_pair" "hgts_shared_keypair" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "hgts-shared-preprod"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = (known after apply)
      + tags_all        = (known after apply)
    }

  # aws_nat_gateway.hgts_shared_gw will be created
  + resource "aws_nat_gateway" "hgts_shared_gw" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Createdby" = "Terraform"
          + "Name"      = "Nat Gateway"
        }
      + tags_all                           = {
          + "Createdby" = "Terraform"
          + "Name"      = "Nat Gateway"
        }
    }

  # aws_network_acl.hgts_shared_nsg will be created
  + resource "aws_network_acl" "hgts_shared_nsg" {
      + arn        = (known after apply)
      + egress     = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 65535
                # (1 unchanged attribute hidden)
            },
        ]
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 65535
                # (1 unchanged attribute hidden)
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name"      = "hgts_shared_nsg"
          + "createdby" = "Terraform"
        }
      + tags_all   = {
          + "Name"      = "hgts_shared_nsg"
          + "createdby" = "Terraform"
        }
      + vpc_id     = (known after apply)
    }

  # aws_route.hgts_shared_rtb_igw will be created
  + resource "aws_route" "hgts_shared_rtb_igw" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # aws_route.hgts_shared_rtb_private_gw will be created
  + resource "aws_route" "hgts_shared_rtb_private_gw" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # aws_route_table.hgts_shared_rtb_private will be created
  + resource "aws_route_table" "hgts_shared_rtb_private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Created_By" = "Teerraform"
          + "Name"       = "hgts_shared_rtb_private"
        }
      + tags_all         = {
          + "Created_By" = "Teerraform"
          + "Name"       = "hgts_shared_rtb_private"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.hgts_shared_rtb_public will be created
  + resource "aws_route_table" "hgts_shared_rtb_public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Created_By" = "Teerraform"
          + "Name"       = "hgts_shared_rtb_public"
        }
      + tags_all         = {
          + "Created_By" = "Teerraform"
          + "Name"       = "hgts_shared_rtb_public"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.hgts_shared_subnet_association1 will be created
  + resource "aws_route_table_association" "hgts_shared_subnet_association1" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.hgts_shared_subnet_association2 will be created
  + resource "aws_route_table_association" "hgts_shared_subnet_association2" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.hgts_shared_subnet_association3 will be created
  + resource "aws_route_table_association" "hgts_shared_subnet_association3" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.hgts_shared_subnet_association4 will be created
  + resource "aws_route_table_association" "hgts_shared_subnet_association4" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_s3_bucket.hgts_shared_statefile will be created
  + resource "aws_s3_bucket" "hgts_shared_statefile" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "hgts-shared-statefile"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # aws_s3_bucket_public_access_block.hgts_public_access will be created
  + resource "aws_s3_bucket_public_access_block" "hgts_public_access" {
      + block_public_acls       = true
      + block_public_policy     = true
      + bucket                  = (known after apply)
      + id                      = (known after apply)
      + ignore_public_acls      = true
      + restrict_public_buckets = true
    }

  # aws_s3_bucket_versioning.hgts_version will be created
  + resource "aws_s3_bucket_versioning" "hgts_version" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + versioning_configuration {
          + mfa_delete = (known after apply)
          + status     = "Enabled"
        }
    }

  # aws_security_group.hgts_shared_linux_sg will be created
  + resource "aws_security_group" "hgts_shared_linux_sg" {
      + arn                    = (known after apply)
      + description            = "To Allow SSH From IPV4 Devices"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "hgts_shared_linux_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Description" = "hgts_shared allow SSH"
          + "Name"        = "hgts_shared_sg_linux"
          + "createdby"   = "terraform"
        }
      + tags_all               = {
          + "Description" = "hgts_shared allow SSH"
          + "Name"        = "hgts_shared_sg_linux"
          + "createdby"   = "terraform"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.hgts_shared_web_sg will be created
  + resource "aws_security_group" "hgts_shared_web_sg" {
      + arn                    = (known after apply)
      + description            = "To Allow SSH From IPV4 Devices"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 3389
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3389
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "hgts_shared_web_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Description" = "hgts_shared allow SSH - RDP - HTTP and Jenkins"
          + "Name"        = "hgts_shared_sg"
          + "createdby"   = "terraform"
        }
      + tags_all               = {
          + "Description" = "hgts_shared allow SSH - RDP - HTTP and Jenkins"
          + "Name"        = "hgts_shared_sg"
          + "createdby"   = "terraform"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.hgts_shared_windows_sg will be created
  + resource "aws_security_group" "hgts_shared_windows_sg" {
      + arn                    = (known after apply)
      + description            = "To Allow RDP From IPV4 Devices"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 3389
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 3389
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "hgts_shared_windows_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Description" = "hgts_shared allow RDP"
          + "Name"        = "sg_hgts_shared_windows"
          + "createdby"   = "terraform"
        }
      + tags_all               = {
          + "Description" = "hgts_shared allow RDP"
          + "Name"        = "sg_hgts_shared_windows"
          + "createdby"   = "terraform"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.hgts_shared_private_subnet1 will be created
  + resource "aws_subnet" "hgts_shared_private_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-south-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"       = "hgts_shared_private_subnet1"
          + "created_by" = "Terraform"
        }
      + tags_all                                       = {
          + "Name"       = "hgts_shared_private_subnet1"
          + "created_by" = "Terraform"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.hgts_shared_private_subnet2 will be created
  + resource "aws_subnet" "hgts_shared_private_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-south-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"       = "hgts_shared_private_subnet2"
          + "created_by" = "Terraform"
        }
      + tags_all                                       = {
          + "Name"       = "hgts_shared_private_subnet2"
          + "created_by" = "Terraform"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.hgts_shared_public_subnet1 will be created
  + resource "aws_subnet" "hgts_shared_public_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-south-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/28"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"       = "hgts_shared_public_subnet"
          + "created_by" = "Terraform"
        }
      + tags_all                                       = {
          + "Name"       = "hgts_shared_public_subnet"
          + "created_by" = "Terraform"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.hgts_shared_public_subnet2 will be created
  + resource "aws_subnet" "hgts_shared_public_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-south-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/28"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"       = "hgts_shared_public_subnet"
          + "created_by" = "Terraform"
        }
      + tags_all                                       = {
          + "Name"       = "hgts_shared_public_subnet"
          + "created_by" = "Terraform"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.hgts_shared_vpc will be created
  + resource "aws_vpc" "hgts_shared_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Created_By" = "Terraform"
          + "Name"       = "hgts_preprod"
        }
      + tags_all                             = {
          + "Created_By" = "Terraform"
          + "Name"       = "hgts_preprod"
        }
    }

  # local_file.private_key will be created
  + resource "local_file" "private_key" {
      + content              = (sensitive value)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0400"
      + filename             = "./hgts-shared-preprod.pem"
      + id                   = (known after apply)
    }

  # tls_private_key.hgts_shared_key will be created
  + resource "tls_private_key" "hgts_shared_key" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + private_key_pem_pkcs8         = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 4096
    }

Plan: 26 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bucket_name      = (known after apply)
  + internet_gw      = (known after apply)
  + keypair          = "hgts-shared-preprod"
  + linux_sg         = (known after apply)
  + nacl             = (known after apply)
  + nat_igw          = (known after apply)
  + private_key_path = "./hgts-shared-preprod.pem"
  + private_subnet_1 = [
      + (known after apply),
    ]
  + private_subnet_2 = [
      + (known after apply),
    ]
  + public_key       = (known after apply)
  + public_subnet_1  = [
      + (known after apply),
    ]
  + public_subnet_2  = [
      + (known after apply),
    ]
  + vpc_id           = (known after apply)
  + web_sg           = (known after apply)
  + windows_sg       = (known after apply)

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you
run "terraform apply" now.
ck@ck hgts-shared % 